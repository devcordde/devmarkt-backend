type Query {
    templates: [Template!] @Auth(role: "user")

    template(
        name: TemplateName!
    ): TemplateResponse @Auth(role: "user")

    roles: [String!] @Auth(role: "admin")

    user(
        id: UserIdInput!
    ): UserResponse @Auth(role: "admin")
}

type Mutation {
    createTemplate(
        name: TemplateName!
        questions: [QuestionInput!]!
    ): TemplateResponse @Auth(role: "admin")

    # TODO: adjust the implementation to 'disable' instead of delete it from the database
    # TODO: rename this query due to the new functionality
    deleteTemplate(
        name: TemplateName!
    ): Boolean @Auth(role: "admin")

    # TODO: merge the next 4 queries in a single 'editTemplate' query
    updateTemplateName(
        oldName: TemplateName!
        newName: TemplateName!
    ): Boolean @Auth(role: "admin")

    addQuestion(
        templateName: TemplateName!
        question: QuestionAddInput!
    ): QuestionResponse @Auth(role: "admin")

    updateQuestion(
        templateName: TemplateName!
        question: QuestionInput!
    ): QuestionResponse @Auth(role: "admin")

    deleteQuestion(
        templateName: TemplateName!
        number: PositiveInt!
    ): Boolean @Auth(role: "admin")

    createUser(
        userId: UserIdInput!
        role: Role!
    ): UserResponse @Auth(role: "admin")

    deleteUser(
        userId: UserIdInput!
    ): Boolean! @Auth(role: "admin")

    updateUserRole(
        userId: UserIdInput!
        role: Role!
    ): UserResponse! @Auth(role: "admin")
}

# common
type Failure {
    message: String!
    errorCode: String!
}
