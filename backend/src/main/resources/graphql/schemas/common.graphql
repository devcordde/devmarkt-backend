type Query {
    templates: [TemplateSuccess!]!

    template(
        name: String! @NotBlank
    ): TemplateResponse!

    question(
        templateName: String! @NotBlank,
        number: Int! @Min(value: 0)
    ): QuestionResponse!

    role(
        name: String! @NotBlank,
    ): RoleResponse!

    permissions: [Permission!]!
}

type Mutation {
    createTemplate(
        name: String! @NotBlank,
        questions: [QuestionInput!]!
    ): TemplateResponse!

    deleteTemplate(
        name: String! @NotBlank
    ): Boolean!

    updateTemplateName(
        oldName: String! @NotBlank,
        newName: String! @NotBlank
    ): Boolean

    addQuestion(
        templateName: String! @NotBlank,
        question: String! @NotBlank,
        number: Int = -1 @Min(value: -1)
    ): QuestionResponse!

    updateQuestion(
        templateName: String! @NotBlank,
        number: Int! @Min(value: -1),
        question: String! @NotBlank
    ): QuestionResponse!

    deleteQuestion(
        templateName: String! @NotBlank,
        number: Int! @Min(value: -1)
    ): Boolean!

    createRole(
        name: String! @NotBlank
        permissions: [PermissionInput!]!
    ): RoleResponse!

    deleteRole(
        name: String! @NotBlank
    ): Boolean!

    addPermissions(
        roleName: String! @NotBlank
        permissions: [PermissionInput!]!
    ): RoleResponse!

    removePermissions(
        roleName: String! @NotBlank
        permissions: [PermissionInput!]!
    ): RoleResponse!
}

# common
interface Error {
    message: String!
    errorCode: String!
}
